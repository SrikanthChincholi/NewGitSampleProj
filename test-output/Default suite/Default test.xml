<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-GA3FTFK" failures="0" tests="5" name="Default test" time="0.609" errors="0" timestamp="2023-06-16T09:58:05 IST">
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@BeforeMethod beforeMethod" time="-1.686889684711E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeMethod on method beforeMethod but has not been marked @Optional or defined
in C:\Users\DELL\AppData\Local\Temp\testng-eclipse-1896169836\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method beforeMethod but has not been marked @Optional or defined
in C:\Users\DELL\AppData\Local\Temp\testng-eclipse-1896169836\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:306)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@AfterMethod atest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod atest -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@AfterMethod atest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod atest -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@AfterMethod atest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod atest -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@AfterMethod atest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod atest -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="sampleproj.sampleproj.BaseClass" name="@AfterMethod atest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod atest -->
  <testcase classname="sampleproj.sampleproj.LoginTest" name="login" time="0.0">
    <skipped/>
  </testcase> <!-- login -->
  <testcase classname="sampleproj.sampleproj.LoginTest" name="login" time="0.001">
    <skipped/>
  </testcase> <!-- login -->
  <testcase classname="sampleproj.sampleproj.LoginTest" name="login" time="0.0">
    <skipped/>
  </testcase> <!-- login -->
  <testcase classname="sampleproj.sampleproj.LoginTest" name="login" time="0.001">
    <skipped/>
  </testcase> <!-- login -->
  <testcase classname="sampleproj.sampleproj.LoginTest" name="login" time="0.0">
    <skipped/>
  </testcase> <!-- login -->
</testsuite> <!-- Default test -->
