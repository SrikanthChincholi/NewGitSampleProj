<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="7" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-16T10:37:18 IST" name="Suite" finished-at="2023-06-16T10:38:02 IST" duration-ms="44775">
    <groups>
    </groups>
    <test started-at="2023-06-16T10:37:18 IST" name="Test2" finished-at="2023-06-16T10:38:01 IST" duration-ms="43658">
      <class name="sampleproj.sampleproj.LoginTest">
        <test-method is-config="true" signature="suiteConfig()[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:17 IST" name="suiteConfig" finished-at="2023-06-16T10:37:18 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteConfig -->
        <test-method is-config="true" signature="beforeTest(org.testng.ITestContext)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:18 IST" name="beforeTest" finished-at="2023-06-16T10:37:18 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@a1217f9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:43 IST" duration-ms="25242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:43 IST" duration-ms="25278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:43 IST" duration-ms="25211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:47 IST" duration-ms="29540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:43 IST" duration-ms="25586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:43 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:57 IST" duration-ms="14018" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [admin123] but found [admin12345]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [admin123] but found [admin12345]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at sampleproj.sampleproj.LoginTest.login(LoginTest.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:43 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:52 IST" duration-ms="9273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:43 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:55 IST" duration-ms="11584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:43 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:54 IST" duration-ms="10269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:47 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:59 IST" duration-ms="12269" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [admin123] but found [admin12345]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [admin123] but found [admin12345]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at sampleproj.sampleproj.LoginTest.login(LoginTest.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:52 IST" name="atest" finished-at="2023-06-16T10:37:59 IST" duration-ms="6296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:54 IST" name="atest" finished-at="2023-06-16T10:37:59 IST" duration-ms="5878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:55 IST" name="atest" finished-at="2023-06-16T10:37:59 IST" duration-ms="4901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:57 IST" name="atest" finished-at="2023-06-16T10:37:59 IST" duration-ms="2536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:37:59 IST" name="atest" finished-at="2023-06-16T10:38:00 IST" duration-ms="617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest()[pri:0, instance:sampleproj.sampleproj.LoginTest@5b202a3a]" started-at="2023-06-16T10:38:00 IST" name="atest" finished-at="2023-06-16T10:38:01 IST" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
      </class> <!-- sampleproj.sampleproj.LoginTest -->
    </test> <!-- Test2 -->
    <test started-at="2023-06-16T10:37:18 IST" name="Test1" finished-at="2023-06-16T10:38:02 IST" duration-ms="44775">
      <class name="sampleproj.sampleproj.LoginTest">
        <test-method is-config="true" signature="beforeTest(org.testng.ITestContext)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:18 IST" name="beforeTest" finished-at="2023-06-16T10:37:18 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4a067c25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:45 IST" duration-ms="27416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:38 IST" duration-ms="20783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:41 IST" duration-ms="23807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:49 IST" duration-ms="30853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:18 IST" name="beforeMethod" finished-at="2023-06-16T10:37:46 IST" duration-ms="28049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:38 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:55 IST" duration-ms="16955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:41 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:53 IST" duration-ms="11733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:45 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:56 IST" duration-ms="10951" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [admin123] but found [admin12345]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [admin123] but found [admin12345]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at sampleproj.sampleproj.LoginTest.login(LoginTest.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:46 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:38:02 IST" duration-ms="16132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:49 IST" name="login" data-provider="Login" finished-at="2023-06-16T10:37:58 IST" duration-ms="9089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:53 IST" name="atest" finished-at="2023-06-16T10:38:00 IST" duration-ms="6961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:55 IST" name="atest" finished-at="2023-06-16T10:37:59 IST" duration-ms="3342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:56 IST" name="atest" finished-at="2023-06-16T10:38:00 IST" duration-ms="3750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:37:58 IST" name="atest" finished-at="2023-06-16T10:37:59 IST" duration-ms="1123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:38:02 IST" name="atest" finished-at="2023-06-16T10:38:02 IST" duration-ms="492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sampleproj.sampleproj.LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method is-config="true" signature="atest()[pri:0, instance:sampleproj.sampleproj.LoginTest@1fdf1c5]" started-at="2023-06-16T10:38:02 IST" name="atest" finished-at="2023-06-16T10:38:02 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
      </class> <!-- sampleproj.sampleproj.LoginTest -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
